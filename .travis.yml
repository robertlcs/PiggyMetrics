sudo: required

services:
  - docker

language: java
jdk: oraclejdk8

env:
  global:
  - secure: nPGcDEOWrLOeNroIenTfviEBciGfn79qRb/DUZyxIWzy+OtkRWlJtc+HQ8PkH6yHfkT6mYUyw9dS7dzXgi5F2cWEeLywBLVzzV2GUOu765dpccS64iC8wHHtKaO8ITO/r1vpCikKtrEQXkxj6rtXcFGMs1HlR+cauhBUUQYjUIMVjVigg/E1+cKfQcUScGNRIZ4VA7HUvOX6laB2Xc1iWT3kf6Rw7r2yzgK6/UAFyr65w5wo/PZALc3iLwc9Mv6j352eIu6hjfWM2n6Zmy8acRf+XVtnKeXZtEfyghTfuEukQchVePmmeywds/pMMoSWoJxcW+VyDVrn9puuBrieSpamFuQAo++PvQfBjVMSXPbPm3Xikd/7q/1yIqqJQqVRv0H21KR8F1yJ9CB2OzWCFyBr70V7YOl/OqyKvd+/iLPEi+KYxAPO7CvHVtscJszpVYxVMG63horycSKSeCWsg9r81MmLKeJUfmpfknxwDujzHSQRnIwmXdFhPqAjQC0FVXIUgq8IRIMxs4D6LZs3GHzgniUNZYARSP7qqt7e2m3O4n9f5qQcX9smJhmlM+PyJSGrwVd0Ob85fiq7sAVtsSKeTo+sYDoUpUhFqmy7ySlS5MO22oWq2K6Moe1QNNal1FyuT9THn9YaRlAkgx3G5FzG5xFDGcsXROzML51h4XM=
  - secure: m3PfP2tr/YnhsMu3xyTzBqFGoKDdd0wlj4KU0RfRr1pfK9VNOnThcpYNIc4URns2+gLhMqxQsFNdbt0tL758YxAFJOn63rvPMf/9wTp827sr/WB2MfKmA1tYA1TxQCNmXt125jET/x6T780k4adTVMKXhHPWmXqSQ02qw/O3kJwFYFBxgRIFWWUDaot3eRhEzYBKNBALugQ2bko41Xl4J37P2db/pzUzS/ZUhNZcw81aUT5VFjSFIxL26YBQmgmFtObWAhF0y1VU/tQvRfJFpyHTUgDOUSvqXmGJ8tYjOZ/WvlTUpo7sB9PF09wXd8Qf1j6Ii296FH2LUHlEfeWg45Wc5VK24C9e0FnTODAX8zSQbcwXgyd5/2H2xxNuQog05YP4w91aaiSwumcZG8XK88KtbzYoWuAfDN2d1kzG4yTQoGUeuJRmj75A+txanTNjMkMZkgX0dMiBI/P2F1Kcm4EuObSaCsHeGpkQdNor/T64UoMsDQv+DD/4EcXia+P+Q580nvo9bvOCl2A6QDbpwlyHIkHTeHhqewcoePnWXNreqLdC/6rT39nWfCY2Slpiim2mx92Q2Xpi6u4xXfK2R0iu/NXY6d8VcsoaX835m3GCekoqpg/EaSgxFtpuvy4jSXiyNrUNaSr6funEF/N1Rs2PfPr5gBYdP1cpL4DbQRw=
  - secure: fd2Wj1Ooi3L0H3aKDDHkdGT3TeDcysQXfo/kfvFzpwzdhhL4O8uJes2aF//bvRYLCapziavWnnri7olJ4vP2owhGEOHORAuh/dxRFznSPz9vZXii2NysbXny8rrJPZWbm12jb3qgHnZAaK/QkMqwnd60FM3V2fTLTFrkPwtX+eKDfcepCaAL5QS3qtI2biAiydJ7+TlKElzCJROItS3wdMxMWi5SFchq91mKMDnVhPNIbjsl736kvPHRVcNZ22/ydIk99JW8g69ao7mQ6HiFG1ZZ9DYGPy2VTEke8yb2pJBhdMM7jREhDdpHrO3warRGGL+rPCYS9e9IrVnhacjNLnTSInRAP0D4DcgMpQhVzVmTyM+XxQ4+Rj7/X+wFcUoJ5ANNvRsq7Z7BkzqPypAIhAgu26/L8Pn31IBFhlPNlIbXteV1XYoX9lcpvBeF+/HTmlPTSEU1OfF/QJDQa+pDhtEmLcJCEksplfgXBqoab3u3w/F/o0OTZ9ch5pz87arP9SOHmycrZ1EstGRFxNR2tGX4htT/OrYjsY5+96vot4t10edjM9byPRXV35Jr5yh2A8phZO5YH4YiYlKqxCl9W1DS/EEjGW5I6yR2EdeAUS3yufzkcWjZMKo/uOIYTxPTKQBNWbqOaOUsKl6UD9Jwvjz51f83e2JVtvFpAuU6NS0=

  - COMMIT=${TRAVIS_COMMIT::7}

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS

  #TAG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`

  # CONFIG SERVICE
  - export CONFIG=robertlcs/piggymetrics-config
  - docker build -t $CONFIG:$COMMIT ./config
  - docker tag $CONFIG:$COMMIT $CONFIG:$TAG
  - docker push $CONFIG

  # REGISTRY
  - export REGISTRY=robertlcs/piggymetrics-registry
  - docker build -t $REGISTRY:$COMMIT ./registry
  - docker tag $REGISTRY:$COMMIT $REGISTRY:$TAG
  - docker push $REGISTRY

  # GATEWAY
  - export GATEWAY=robertlcs/piggymetrics-gateway
  - docker build -t $GATEWAY:$COMMIT ./gateway
  - docker tag $GATEWAY:$COMMIT $GATEWAY:$TAG
  - docker push $GATEWAY

  # AUTH SERVICE
  - export AUTH_SERVICE=robertlcs/piggymetrics-auth-service
  - docker build -t $AUTH_SERVICE:$COMMIT ./auth-service
  - docker tag $AUTH_SERVICE:$COMMIT $AUTH_SERVICE:$TAG
  - docker push $AUTH_SERVICE

  # ACCOUNT SERVICE
  - export ACCOUNT_SERVICE=robertlcs/piggymetrics-account-service
  - docker build -t $ACCOUNT_SERVICE:$COMMIT ./account-service
  - docker tag $ACCOUNT_SERVICE:$COMMIT $ACCOUNT_SERVICE:$TAG
  - docker push $ACCOUNT_SERVICE

  # STATISTICS SERVICE
  - export STATISTICS_SERVICE=robertlcs/piggymetrics-statistics-service
  - docker build -t $STATISTICS_SERVICE:$COMMIT ./statistics-service
  - docker tag $STATISTICS_SERVICE:$COMMIT $STATISTICS_SERVICE:$TAG
  - docker push $STATISTICS_SERVICE

  # NOTIFICATION_SERVICE
  - export NOTIFICATION_SERVICE=robertlcs/piggymetrics-notification-service
  - docker build -t $NOTIFICATION_SERVICE:$COMMIT ./notification-service
  - docker tag $NOTIFICATION_SERVICE:$COMMIT $NOTIFICATION_SERVICE:$TAG
  - docker push $NOTIFICATION_SERVICE

  # MONITORING
  - export MONITORING=robertlcs/piggymetrics-monitoring
  - docker build -t $MONITORING:$COMMIT ./monitoring
  - docker tag $MONITORING:$COMMIT $MONITORING:$TAG
  - docker push $MONITORING

  # MONGO DB
  - export MONGO_DB=robertlcs/piggymetrics-mongodb
  - docker build -t $MONGO_DB:$COMMIT ./mongodb
  - docker tag $MONGO_DB:$COMMIT $MONGO_DB:$TAG
  - docker push $MONGO_DB